<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lin&#39;s Poem</title>
    <link>https://linsama.me/posts/</link>
    <description>Lin&#39;s Poem (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Mar 2020 11:34:52 +0800</lastBuildDate>
    
    <atom:link href="https://linsama.me/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 V2Ray 进行科学上网</title>
      <link>https://linsama.me/posts/wide-world/</link>
      <pubDate>Wed, 04 Mar 2020 11:34:52 +0800</pubDate>
      
      <guid>https://linsama.me/posts/wide-world/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h3 id=&#34;科学上网简述&#34;&gt;科学上网简述&lt;/h3&gt;
&lt;p&gt;随着个人电脑、智能手机的普及，互联网，已经成为我们日常生活中不可或缺的重要组成部分。有人戏称，断网是对一个人最大的惩罚。那么，对于我们每天使用的网络，它是“互联”的吗？&lt;/p&gt;
&lt;p&gt;很遗憾，并不是。&lt;/p&gt;
&lt;p&gt;古时候，长城（Great Wall）保护着中原大地不受外敌入侵；如今，防火长城（Great Firewall，以下简称GFW）组织者外部网络的“入侵”。虽然GFW阻止了我们访问一些不良网站， 但是同时，一些优秀的国外网站也被拒之门外，不得不说是一个遗憾。&lt;/p&gt;
&lt;p&gt;因此，我们需要解锁上网的新姿势，让我们访问被 GFW 屏蔽掉的优秀网站，去认识更广大的世界，这就是科学上网。&lt;/p&gt;
&lt;h3 id=&#34;人人都需要科学上网吗&#34;&gt;人人都需要科学上网吗？&lt;/h3&gt;
&lt;p&gt;诚然，很多优秀的网站被 GFW 所屏蔽，但是 GFW 内部仍然有许多优秀的网站、资源可供访问，这些网站足以满足普通用户的日常需求，并且大多数网站对于国内的用户都进行了优化，相比墙外的网站拥有更好的体验。因此对于大部分人来说，科学上网不是必备的技能。&lt;/p&gt;
&lt;p&gt;但是对于另一部分从事科研、文艺等内容的人来说，GFW 屏蔽掉了很多优秀资源网站，包括一些资料、文档等；同时，很多网站的服务器架设在国外，从国内访问并没有很好地速度。因此对于这部分人来说，科学上网堪称“刚需”。&lt;/p&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;h3 id=&#34;基本要求&#34;&gt;基本要求&lt;/h3&gt;
&lt;p&gt;由于大部分的代理服务器运行的都是 Linux 环境，对于想要搭建代理服务器的用户有一定的 Linux 操作能力。&lt;/p&gt;
&lt;h3 id=&#34;了解自己的需求&#34;&gt;了解自己的需求&lt;/h3&gt;
&lt;p&gt;科学上网的第一步，就是要了解自己的需求。不妨思考以下几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我是否需要科学上网？&lt;/li&gt;
&lt;li&gt;我经常浏览什么内容？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些问题会影响到挑选什么样的代理服务器。如果仅仅为了体验下国外的网站，那么代理服务器选一个便宜的即可；如果需要看一些 YouTube 视频，则要保证代理服务器有足够的带宽。&lt;/p&gt;
&lt;h3 id=&#34;挑选代理服务器&#34;&gt;挑选代理服务器&lt;/h3&gt;
&lt;p&gt;提供代理服务器的大小厂商有很多。&lt;/p&gt;
&lt;p&gt;如果是第一次搭建代理服务器的话，推荐使用 &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;（GCP）提供的虚拟机。GCP 的机房很多，而且速度有保障，可以说是目前速度最快的机器之一。但是缺点是价格较高，不过新用户注册会送 $300 和一年的体验。&lt;/p&gt;
&lt;p&gt;除了 GCP 之外，&lt;a href=&#34;https://www.vultr.com/&#34;&gt;Vultr&lt;/a&gt;，&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt;，&lt;a href=&#34;https://bandwagonhost.com/&#34;&gt;BandwagonHOST&lt;/a&gt; 也是不错的选择，可以根据自身需求选择合适自己的套餐。&lt;/p&gt;
&lt;h3 id=&#34;科学上网方案&#34;&gt;科学上网方案&lt;/h3&gt;
&lt;p&gt;目前常用的科学上网工具有 &lt;a href=&#34;https://github.com/shadowsocks/shadowsocks/tree/master&#34;&gt;ShadowSockes&lt;/a&gt; 和 &lt;a href=&#34;https://www.v2ray.com/&#34;&gt;V2Ray&lt;/a&gt;，本文仅介绍 V2Ray 的配置方法，二者具体的差异可以自行调研，并选择合适的方案。&lt;/p&gt;
&lt;h2 id=&#34;v2ray-配置&#34;&gt;V2Ray 配置&lt;/h2&gt;
&lt;h3 id=&#34;服务端配置&#34;&gt;服务端配置&lt;/h3&gt;
&lt;h4 id=&#34;安装&#34;&gt;安装&lt;/h4&gt;
&lt;p&gt;V2Ray 的官网上提供了常见操作系统的&lt;a href=&#34;https://www.v2ray.com/chapter_00/install.html&#34;&gt;安装方式&lt;/a&gt;，以 Linux 为例，使用以下命令可以直接安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;bash &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;curl -L -s https://install.direct/go.sh&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;配置&#34;&gt;配置&lt;/h4&gt;
&lt;p&gt;安装好了后，需要对 V2Ray 做一些基本的配置，V2Ray 默认的配置文件在 &lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;，以下为一份简要的配置，其中端口可以自行配置，id 可以在 &lt;a href=&#34;http://www.uuid.online/&#34;&gt;uuid.online&lt;/a&gt; 上生成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;inbounds&amp;#34;&lt;/span&gt;: [{
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vmess&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;settings&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;clients&amp;#34;&lt;/span&gt;: [{
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bf6b5b27-b45a-4c40-a8f1-e127c0690b64&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;alterId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;security&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            }]
        }
    }],
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;outbounds&amp;#34;&lt;/span&gt;: [{
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;freedom&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;settings&amp;#34;&lt;/span&gt;: {}
    }]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;启动&#34;&gt;启动&lt;/h4&gt;
&lt;p&gt;配置好后，可以在后台运行 V2Ray，成功启动后，服务端配置完成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;nohup /usr/bin/v2ray/v2ray -config /etc/v2ray/config.json &amp;gt; v2ray.log 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;开启端口&#34;&gt;开启端口&lt;/h4&gt;
&lt;p&gt;出于安全的考虑，部分服务器默认没有打开 8088 端口，需要手动打开：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;/sbin/iptables -I INPUT -p tcp --dport &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt; -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;加速&#34;&gt;加速&lt;/h2&gt;
&lt;p&gt;虽然 V2Ray 的服务端已经配置完成，但是服务器默认的配置速度有限，此时可以使用 &lt;a href=&#34;https://github.com/google/bbr&#34;&gt;BBR&lt;/a&gt; 等技术对代理服务器进行加速。有大神将常用的加速手段集成为一个一键&lt;a href=&#34;https://github.com/google/bbr&#34;&gt;脚本&lt;/a&gt;，建议使用 BBR Plus 进行加速。&lt;/p&gt;
&lt;p&gt;使用加速后，YouTube 1080p 视频还是毫无压力的。
&lt;img src=&#34;https://linsama.me/img/2020/wide_world/youtube_test.png&#34; alt=&#34;YouTube Test&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;客户端配置&#34;&gt;客户端配置&lt;/h2&gt;
&lt;p&gt;配置完服务端后，客户端也需要进行相应的配置，才能够顺利地进行科学上网。&lt;/p&gt;
&lt;p&gt;V2Ray 有多种客户端可供选择，在 V2Ray 的官网中可以查看客户端列表，这里推荐使用 &lt;a href=&#34;https://github.com/2dust/v2rayN/releases&#34;&gt;V2RayN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解压之后配置上自己的服务器并启动：
&lt;img src=&#34;https://linsama.me/img/2020/wide_world/v2rayn.png&#34; alt=&#34;V2RayN&#34;&gt;&lt;/p&gt;
&lt;p&gt;参数设置中，可以修改端口号，建议为 1080，选择 HTTP 代理为 PAC 模式，就可以进行科学上网了：
&lt;img src=&#34;https://linsama.me/img/2020/wide_world/v2rayn_port.png&#34; alt=&#34;V2RayN Config&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果使用 Chrome 浏览器的话，可以搭配 SwitchyOmega 插件使用，在 proxy 模式中，代理协议设置为 SOCKS5，代理服务器设置为 127.0.0.1，代理端口设置为 V2RayN 中设置的本地监听端口：
&lt;img src=&#34;https://linsama.me/img/2020/wide_world/switchyomega.png&#34; alt=&#34;SwitchyOmega&#34;&gt;&lt;/p&gt;
&lt;p&gt;欢迎来到更大的世界~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>写在哈尔滨校招之后</title>
      <link>https://linsama.me/posts/after_campus_hire/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://linsama.me/posts/after_campus_hire/</guid>
      <description>&lt;h2 id=&#34;一点小背景&#34;&gt;一点小背景&lt;/h2&gt;
&lt;p&gt;九月，又是一个校招季，我也有幸成为了某知名 O2O 互联网公司的校招面试官，在哈尔滨开始了为期三天的校招面试。&lt;/p&gt;
&lt;h2 id=&#34;整体情况&#34;&gt;整体情况&lt;/h2&gt;
&lt;p&gt;说到哈尔滨，最出名的学校那就是哈工大了。此外，由于很多公司不会在长春开招聘会，我所在的公司也是其中之一，所以会有一部分吉林大学的学生也会来哈尔滨面试。不过，虽然有两所名校加持，但是哈尔滨这边的生源，着实有些一言难尽。&lt;/p&gt;
&lt;p&gt;首先由于我所在的公司从各种角度来说，都不在第一梯队上，所以会有一些手握大把 offer 的 dalao，选择节约自己至少四个小时的时间不来面试；其次，哈尔滨，包括长春在内，几乎都没有很有名的 IT 企业，学生们大部分都没有经历过实习，相比于北上这种城市的学生来说，缺少出彩的经历；最后，简历上的项目也都以研究生项目、课设为主，而且重复的很高，几乎十个学生，有八个做过网盘，甚至连一些问题的处理方式都是一样的。&lt;/p&gt;
&lt;h2 id=&#34;我的侧重点&#34;&gt;我的侧重点&lt;/h2&gt;
&lt;p&gt;不同的面试官有不同的侧重点。作为第一次校招面试（可能也是最后一次），我也在面试的过程中，不断反思自己的提问是否有意义，并且结合我过去的一些面试经历，最终算是找到了自己提问的模式。接下来就简单讲下我个人的提问模式，以及我在这个过程中，重点考察的一些点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;基于简历先介绍一下自己&lt;/strong&gt;
我个人而言，回去先看一遍面试这的简历，然后再让面试者自己介绍一下。我在看简历的时候会记几个我比较感兴趣的点，在面试者介绍的时候，我也会去看看有没有我没有注意到的比较有意思的点，可能会让面试者深入介绍一下，或者进行一些提问。
这一阶段，我比较希望了解到的是：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;擅长的技术&lt;/li&gt;
&lt;li&gt;做过的项目，重点是自己做的部分，以及项目中那些难点&lt;/li&gt;
&lt;li&gt;比较有意思的经历，比如实习、留学、竞赛等等&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;基于项目的一些提问&lt;/strong&gt;
基于项目的提问，重点考察的是这个项目是否有实际做过，以及是否有更深一步的思考。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这一阶段我的问题主要分两个方向，一是项目中的某一个模块如何设计的，为什么要这么设计；另一个是如果这个项目要进行一些扩展，怎么去做。&lt;/p&gt;
&lt;p&gt;举个例子，这次面试，80% 以上的学生都会写一个网盘的项目，估计是课设或者课外班的题目。项目本身的话，会问一些具体功能点的实现，比如说断点续传；其次，会去基于某一个点进行扩展，比如说项目中使用的设计模式，是否了解其他设计模式，能否写出一个等等；最后，在项目本身的基础上进行扩展，对于网盘项目，我又问了类似增加文件夹、分类等功能，这个网盘该如何实现等问题。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一些基础知识的问题&lt;/strong&gt;
这部分就是考察基础知识掌握的是否扎实。由于我是一面，侧重会偏向于知识点的广度是否足够。
如果面试者的简历上写了很多技能，那么可以挑一些稍微难一点的来问，比如 Java 的并发、NIO 等问题，设计模式、操作系统、网络、数据库等等也在考察范围内。问的时候也会避免一些死记硬背的东西，考察面试者对这些知识点是否理解，比如项目中的数据库设计符合哪个范式，网络传输的项目使用的是哪种协议等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;算法&lt;/strong&gt;
算法相关的内容，是我在本次面试的时候最失望的点。面过的所有学生，都没有刷过算法相关的题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;很多学生可能会以为工作中算法用到的比较少，而且相较于很快的学会一个框架做出一个小项目，刷题显得十分枯燥。然而，算法会是面试中考察的很重要的一点。一些知名的外企，比如微软、Google 这种，面试基本上只问算法题；国内的互联网公司，比如我在的这家，会问很多的工程相关的问题，但是算法也是很重要的一环。&lt;/p&gt;
&lt;p&gt;另外还有一个很重要的点，面试者使用的技术栈，有时候与面试官的并不匹配，比如我比较擅长 Java，遇到了一个 C/C++ 的面试者，可能针对语言层次我问不出太高级的问题，那么就会更偏向问算法题，毕竟这个是通用的。还有一个很重要的点，就是协议到算法题会占用很长的时间，可以用来写面试评价，或者偷懒&amp;hellip;&lt;/p&gt;
&lt;p&gt;没什么好说的，刷题就好。&lt;/p&gt;
&lt;h2 id=&#34;一些建议&#34;&gt;一些建议&lt;/h2&gt;
&lt;p&gt;上面已经提到过了，不同的面试官会有不同的侧重点，以下的一些建议也是基于我个人的侧重点来说的，大家仅作参考吧。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;面试官在问自我介绍的时候，不等于让你做自我评价。一个人不可能把自我评价作的准确，是否录用也取决于面试官对你的评价，而不是你自己的评价&lt;/li&gt;
&lt;li&gt;自我介绍的时候，重点讲一下项目，尤其是自己做的部分，以及项目中的难点，如何解决掉这些难点&lt;/li&gt;
&lt;li&gt;即使是同样的课设项目，对项目的思考是否深入、全面，也可以体现出与其他人的差距&lt;/li&gt;
&lt;li&gt;当然，有实习经历就更好了&lt;/li&gt;
&lt;li&gt;自己简历上写的东西，一定要研究透彻，如果简历上写的东西，尤其是做过的项目还一问三不知的话，那基本就凉凉了&lt;/li&gt;
&lt;li&gt;面试的时候表现的有自信一点，声音太小会听不清；回答问题不够清晰，总是用疑问句来回答，会显得不够自信。表达能力也是很多公司会考察的一点&lt;/li&gt;
&lt;li&gt;知识点可以死记硬背，面试官也能听出来这个是死记硬背的，如果能够深入理解，并且和一些做过的项目结合的话，会加分&lt;/li&gt;
&lt;li&gt;多刷题，多刷题，多刷题&lt;/li&gt;
&lt;li&gt;如果遇到了同校的前辈，或者通过间接的方式还认识前辈的话，是可以&amp;hellip;你懂的&lt;/li&gt;
&lt;li&gt;长得好看是真的会加分的&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Hello Hugo</title>
      <link>https://linsama.me/posts/hello-hugo/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://linsama.me/posts/hello-hugo/</guid>
      <description>&lt;p&gt;这是用 hugo 发的第一篇文章。&lt;/p&gt;
&lt;p&gt;之前的 blog 使用的是 hexo，现在换了一个。&lt;/p&gt;
&lt;p&gt;hexo 很棒，但是很多时候就是这样，不再使用一个东西，只是因为遇到了新的。&lt;/p&gt;
&lt;p&gt;或许这就是喜新厌旧。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>